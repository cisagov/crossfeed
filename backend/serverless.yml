service: crossfeed

frameworkVersion: '3'
useDotenv: true
configValidationMode: error

custom:
  webpack:
    webpackConfig: 'webpack.backend.config.js'
  customDomain:
    domainName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    basePath: ''
    certificateName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    stage: ${self:provider.stage}
    createRoute53Record: false

provider:
  name: aws
  region: us-east-1
  endpointType: REGIONAL
  runtime: nodejs16.x
  timeout: 30
  stage: ${opt:stage, 'dev'}
  environment: ${file(env.yml):${self:provider.stage}, ''}
  vpc: ${file(env.yml):${self:provider.stage}-vpc, ''}
  apiGateway:
    binaryMediaTypes:
      - 'image/*'
      - 'font/*'
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: 'execute-api:Invoke'
        Resource: 'execute-api:/${self:provider.stage}/*/*'
  logs:
    restApi: true
  deploymentBucket:
    serverSideEncryption: AES256
  iam:
    role:
      statements:
        # TODO: make the resources more specific. See Resource: '*' was
        - Effect: Allow
          Action:
            - lambda:InvokeAsync
            - lambda:InvokeFunction
            - cognito-idp:AdminDisableUser
            - cognito-idp:ListUsers
            - cognito-idp:AdminSetUserPassword
          Resource: "*"
        - Effect: Allow
          Action:
            - ecs:RunTask
            - ecs:ListTasks
            - ecs:DescribeTasks
            - ecs:DescribeServices
            - ecs:UpdateService
            - iam:PassRole
          Resource: '*'
        - Effect: Allow
          Action:
            - ses:SendRawEmail
          Resource: '*'
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:PutBucketAcl
            - s3:GetBucketAcl
          Resource: '*'
        - Effect: Allow
          Action:
            - sts:AssumeRole
          Resource: '*'
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:SendMessage
            - sqs:GetQueueAttributes
          Resource: '*'
        - Effect: Allow
          Action:
            - logs:CreateExportTask
            - logs:CreateLogStream
            - logs:Describe*
            - logs:Get*
            - logs:List*
            - logs:PutLogEvents
            - logs:StartQuery
            - logs:StopQuery
            - logs:TestMetricFilter
            - logs:FilterLogEvents
            - logs:StartLiveTail
            - logs:StopLiveTail
          Resource: '*'
        - Effect: Allow
          Action:
            - ssm:DescribeParameters
            - ssm:GetParameter
            - ssm:GetParameters
            - ssm:GetParametersByPath
            - ssm:PutParameter
          Resource: '*'

resources:
  Resources:
    WorkerControlQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-worker-control-queue
        VisibilityTimeout: 300 # Should match or exceed function timeout
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days
    ShodanQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-shodan-queue
        VisibilityTimeout: 300
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days
    DnstwistQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-dnstwist-queue
        VisibilityTimeout: 300
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days
    HibpQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-hibp-queue
        VisibilityTimeout: 300
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days
    IntelxQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-intelx-queue
        VisibilityTimeout: 300
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days
    CybersixgillQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-cybersixgill-queue
        VisibilityTimeout: 300
        MaximumMessageSize: 262144 # 256 KB
        MessageRetentionPeriod: 604800 # 7 days

functions:
  - ${file(./src/tasks/functions.yml)}
  - ${file(./src/api/functions.yml)}

plugins:
  - serverless-domain-manager
  - serverless-webpack
  - serverless-dotenv-plugin
