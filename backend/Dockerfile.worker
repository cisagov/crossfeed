FROM node:14-alpine3.14 as build

WORKDIR /app

COPY ./package* ./

RUN npm ci

COPY tsconfig.json ./tsconfig.json
COPY webpack.worker.config.js ./webpack.worker.config.js
COPY src ./src

RUN npx webpack --config webpack.worker.config.js

FROM golang:1.14.6-alpine as deps

WORKDIR /app

RUN apk add --no-cache wget unzip

RUN wget --quiet https://github.com/Edu4rdSHL/findomain/releases/download/1.7.0/findomain-linux -O /usr/bin/findomain && chmod +x /usr/bin/findomain

RUN wget --quiet https://github.com/OWASP/Amass/releases/download/v3.7.3/amass_linux_i386.zip -O amass.zip && unzip -q amass.zip && cp amass_linux_i386/amass /usr/bin && chmod +x /usr/bin/amass

RUN go mod init crossfeed-worker

RUN go get github.com/facebookincubator/nvdtools/...@v0.1.4

FROM node:14-alpine3.14

WORKDIR /app

RUN apk add --update --no-cache wget build-base curl git unzip openssl-dev linux-headers python3=3.9.5-r1 python3-dev py3-pip ruby=2.7.4-r0 ruby-dev zlib-dev libffi-dev

RUN npm install -g pm2@4 wait-port@0.2.9

# Install intrigue ident v2.0.2

# ENV PATH /usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH
# ENV RBENV_ROOT /usr/local/rbenv
# RUN git clone --depth 1 git://github.com/sstephenson/rbenv.git ${RBENV_ROOT} \
#     &&  git clone --depth 1 https://github.com/sstephenson/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build \
#     &&  git clone --depth 1 git://github.com/jf/rbenv-gemset.git ${RBENV_ROOT}/plugins/rbenv-gemset \
#     && ${RBENV_ROOT}/plugins/ruby-build/install.sh
# RUN rbenv install 2.6.5 && rbenv global 2.6.5 && gem install bundler:2.1.4 || cat /tmp/*
RUN gem instal bundler:2.1.4
RUN git clone https://github.com/intrigueio/intrigue-ident.git && cd intrigue-ident && git checkout e97f974417147df8fa27dcd8f73b7efbb587b942 && sed -i 's/2.6.5/2.7.4/g' Gemfile && sed -i 's/2.6.5p114/2.7.4/g' Gemfile.lock && bundle install --jobs=4
RUN echo 'cd /app/intrigue-ident && bundle exec ruby ./util/ident.rb $@' > /usr/bin/intrigue-ident && chmod +x /usr/bin/intrigue-ident

# Python dependencies

COPY worker/requirements.txt worker/requirements.txt
RUN pip install --no-cache-dir -r worker/requirements.txt

COPY worker worker

COPY --from=build /app/dist/worker.bundle.js worker.bundle.js

COPY --from=deps /usr/bin/findomain /usr/bin/amass /go/bin/csv2cpe /go/bin/nvdsync /go/bin/cpe2cve /usr/bin/

COPY --from=deps /etc/ssl/certs /etc/ssl/certs

ENV GLOBAL_AGENT_HTTP_PROXY=http://localhost:8080
ENV GLOBAL_AGENT_NO_PROXY=censys.io

CMD ["./worker/worker-entry.sh"]
