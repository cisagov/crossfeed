cloudwatchToS3:
  handler: src/tasks/cloudwatchToS3.handler
  timeout: 900
  events:
    - schedule: rate(4 hours)
  reservedConcurrency: 1
  memorySize: 4096

scheduler:
  handler: src/tasks/scheduler.handler
  timeout: 900
  events:
    - schedule: rate(5 minutes)
  reservedConcurrency: 1
  memorySize: 4096

syncdb:
  timeout: 900
  handler: src/tasks/syncdb.handler

pesyncdb:
  timeout: 900
  handler: src/tasks/pesyncdb.handler

bastion:
  timeout: 900
  handler: src/tasks/bastion.handler

makeGlobalAdmin:
  handler: src/tasks/makeGlobalAdmin.handler

checkUserExpiration:
  timeout: 300
  handler: src/tasks/checkUserExpiration.handler
  events:
    - schedule: cron(0 0 * * ? *) # Runs every day at midnight
scanExecution:
  handler: src/tasks/scanExecution.handler
  timeout: 300 # 5 minutes
  environment:
    SQS_QUEUE_NAME: ${self:provider.stage}-worker-control-queue
  events:
    - sqs:
        arn:
          Fn::GetAtt:
            - WorkerControlQueue
            - Arn
  memorySize: 4096

updateScanTaskStatus:
  handler: src/tasks/updateScanTaskStatus.handler
  events:
    - eventBridge:
        name: ${self:provider.stage}-updateScanTaskStatus
        pattern:
          source:
            - aws.ecs
          detail-type:
            - ECS Task State Change
          detail:
            clusterArn:
              - ${file(env.yml):${self:provider.stage}-ecs-cluster, ''}
