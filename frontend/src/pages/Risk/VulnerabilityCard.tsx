import React from 'react';
import { Vulnerability } from 'types';
import { Paper, Tooltip } from '@mui/material';
import { Link, useHistory } from 'react-router-dom';
import * as RiskStyles from './style';
import { getSeverityColor } from './utils';
interface VulnerabilityCount extends Vulnerability {
  count: number;
}

const VulnerabilityCard = (props: {
  title: string;
  showLatest: boolean;
  showCommon: boolean;
  data: VulnerabilityCount[];
}) => {
  const history = useHistory();

  const { title, showLatest, showCommon, data } = props;
  const {
    cardRoot,
    cardInner,
    cardSmall,
    cardTitle,
    cardColumnHeadings,
    miniCardRoot,
    miniCardCenter,
    miniCardLeft,
    vulnCount,
    seeAll,
    header,
    body,
    button,
    underlined
  } = RiskStyles.classesRisk;

  const truncateText = (text: string, len: number) => {
    if (text.length <= len) return text;
    return text.substring(0, len) + '...';
  };

  const seeAllLink = showLatest
    ? '/inventory/vulnerabilities?sort=createdAt&desc=false'
    : showCommon
    ? '/inventory/vulnerabilities/grouped'
    : '';

  const seeAllContent =
    showLatest || showCommon ? (
      <div className={seeAll}>
        <h4>
          <Link to={seeAllLink}>See All</Link>
        </h4>
      </div>
    ) : null;

  const domainDetailsLinkHandler = (domainDetailsLink: string) =>
    history.push(domainDetailsLink);

  const vulnerabilityGridContent =
    data?.length > 0 ? (
      data.slice(0, 4).map((vuln) => {
        const vulnDomain = vuln.domain ? '&domain=' + vuln.domain.name : '';
        const domainDetailsLink =
          '/inventory/vulnerabilities?title=' + vuln.title + vulnDomain;
        return (
          <Tooltip
            title={
              <span className={cardTitle}>
                {truncateText(vuln.description, 120)}
              </span>
            }
            placement="right"
            arrow
            key={vuln.title}
          >
            <Paper
              elevation={0}
              className={miniCardRoot}
              aria-label="view domain details"
              onClick={() => domainDetailsLinkHandler(domainDetailsLink)}
            >
              <div className={cardInner}>
                <div className={vulnCount}>{vuln.count}</div>
                <div className={miniCardLeft}>{vuln.title}</div>
                <div className={miniCardCenter}>
                  <p
                    className={underlined}
                    style={{
                      borderBottom: `6px solid ${getSeverityColor({
                        id: vuln.severity ?? ''
                      })}`
                    }}
                  >
                    {vuln.severity}
                  </p>
                </div>
                <button className={button}>DETAILS</button>
              </div>
              {
                <hr
                  style={{
                    border: '1px solid #F0F0F0',
                    position: 'relative',
                    maxWidth: '90%'
                  }}
                />
              }
            </Paper>
          </Tooltip>
        );
      })
    ) : (
      <h3>No open vulnerabilities</h3>
    );

  return (
    <Paper elevation={0} className={cardRoot}>
      <div className={cardSmall}>
        {seeAllContent}
        <div className={header}>
          <h2>{title}</h2>
        </div>
        <div className={body}>
          <ul className={cardColumnHeadings}>
            <li>Count</li>
            <li>Vulnerability</li>
            <li>Severity</li>
            <li> </li>
          </ul>
          {/* <h4 style={{ float: 'left' }}>Today:</h4> */}
          <div>{vulnerabilityGridContent}</div>
        </div>
      </div>
    </Paper>
  );
};
export default VulnerabilityCard;
