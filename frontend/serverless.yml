service: crossfeed-frontend

frameworkVersion: '3'
useDotenv: true
configValidationMode: error

custom:
  webpack:
    webpackConfig: 'webpack.lambda.config.js'
  customDomain:
    domainName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    basePath: ''
    certificateName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    stage: ${self:provider.stage}
    createRoute53Record: false

provider:
  name: aws
  region: us-east-1
  endpointType: REGIONAL
  runtime: nodejs16.x
  timeout: 30
  stage: ${opt:stage, 'dev'}
  environment: ${file(env.yml):${self:provider.stage}, ''}
  vpc: ${file(env.yml):${self:provider.stage}-vpc, ''}
  apiGateway:
    binaryMediaTypes:
      - 'image/*'
      - 'font/*'
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: 'execute-api:Invoke'
        Resource: 'execute-api:/${self:provider.stage}/*/*'
  logs:
    restApi: true
  deploymentBucket:
    serverSideEncryption: AES256

functions:
  api:
    handler: scripts/api.handler
    events:
      - http:
          path: / # this matches the base path
          method: GET
      - http:
          path: /{any+} # this matches any path, the token 'any' doesn't mean anything special
          method: GET
    # provisionedConcurrency: 1
  docs:
    handler: scripts/docs.handler
    events:
      - http:
          path: /docs
          method: GET

plugins:
  - serverless-domain-manager
  - serverless-better-credentials
  - serverless-webpack
